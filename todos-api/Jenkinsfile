pipeline {
    agent any

    environment {
        IMAGE_NAME = "todos-api"
        DOCKER_REGISTRY = "geoffrey0pv"
    }

    stages {
        stage('Detectar Cambios') {
            when { changeset "todos-api/**" }
            steps {
                echo "Cambios detectados en el todos-api. Continuando..."
            }
        }

        stage('Instalar Dependencias y Probar') {
            steps {
                sh 'npm install'
            }
        }

        stage('Construir Imagen Docker') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${env.GIT_COMMIT.substring(0,7)} ."
                sh "docker tag ${IMAGE_NAME}:${env.GIT_COMMIT.substring(0,7)} ${DOCKER_REGISTRY}/${IMAGE_NAME}:latest-${env.BRANCH_NAME}"
            }
        }

        stage('Publicar Imagen Docker') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin"
                    sh "docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:latest-${env.BRANCH_NAME}"
                }
            }
        }
    }
    post {
        success {
            if (env.BRANCH_NAME == 'main') {
                echo "Disparando el pipeline de integración..."
                build job: 'integration-pipeline',
                      parameters: [
                          string(name: 'TRIGGERING_SERVICE', value: "${IMAGE_NAME}"),
                          string(name: 'IMAGE_TAG', value: "latest-main")
                      ]
            }
        }
    }
    post {
        success {
            if (env.BRANCH_NAME == 'main') {
                echo "Disparando el pipeline de integración..."
                build job: 'integration-pipeline',
                      parameters: [
                          string(name: 'TRIGGERING_SERVICE', value: "${IMAGE_NAME}"),
                          string(name: 'IMAGE_TAG', value: "latest-main")
                      ]
            }
        }
    }
}